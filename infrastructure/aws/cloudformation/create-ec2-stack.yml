#Yogita Jain, jain.yo@husky.neu.edu, 001643815
#Rohan Magare, magare.r@husky.neu.edu, 001231457
#Pratiksha Shetty, shetty.pr@husky.neu.edu, 001643697
#Ritesh Gupta, gupta.rite@husky.neu.edu, 001280361

AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template to create an EC2 instance

Parameters:
  InstanceType:
    Description: Instance type to use
    Type: "String"
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small or m1.large
  Id:
    Description: Image id of the AMI
    Type: AWS::EC2::Image::Id
  SubnetId:
    Description: Subnet id of the AMI
    Type: "String"
  VpcId:
    Description: Vpc id of the AMI
    Type: "String"
  SecurityGroupName:
    Description: Security Group name
    Type: "String"
  HostedZoneId:
    Description: Hosted zone id
    Type: "String"
  DomainName:
    Description: domain name to create in the RecordSet
    Type: "String"
  DeviceName:
    Description: device name to create in the RecordSet
    Type: "String"
  VolumeSize:
    Description: volume size to create in the RecordSet
    Type: "String"
  VolumeType:
    Description: volume type to create in the RecordSet
    Type: "String"
  DBSecurityGroup:
    Description: Security Group name
    Type: "String"
  DBName:
    Description: Name of the RDS database
    Type: "String"
  DBAllocatedStorage:
    Description: DBAllocatedStorage for RDS instance
    Type: "String"
  DBInstanceClass:
    Description: Instance class type for the RDS database
    Type: "String"
  DBUser:
    Description: database user name for RDS instance
    Type: "String"
  DBPassword:
    Description: database password of the RDS database
    Type: "String"
  DatabaseType:
    Description: "Type of database: MySQL, Sql"
    Type: "String"
  DatabaseVersion:
    Description: Version of database engine
    Type: "String"
  DBStorageType:
    Description: "Type of Storage gp2 or io1"
    Type: "String"
  InstanceIdentifier:
    Description: Name of instance identifier
    Type: "String"
  SubnetId1:
    Description: Subnet Id for us-east-1c
    Type: "String"
  SubnetId2:
    Description: Subnet Id for us-east-1b
    Type: "String"
  #BucketName:
  #  Description: Name of the S3 bucket
  #  Type: "String"
  DynamodbTableName:
    Description: Name of the Dynamodb
    Type: "String"
  ReadCU:
    Description: Read capacity units for Dynamodb
    Type: "String"
  WriteCU:
    Description: Write capacity units for Dynamodb
    Type: "String"
  ColumnName:
    Description: PrimaryKey Name for DB
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '2048'
    ConstraintDescription: "only alphanumberic characters"
  IdDataType:
    Description: Id PrimaryKey Data Type
    Type: String
    Default: S
    AllowedPattern: '[S|N]'
    MinLength: '1'
    MaxLength: '1'
    ConstraintDescription: "must be either S or N"
  WebserverPort:
    Description: TCP server port 80 Instance
    Type: "String"
  HttpPort:
    Description: Http port for EC2 Instance
    Type: "String"
  HttpsPort:
    Description: Https port for EC2 Instance
    Type: "String"
  DBIngressPort:
    Description: MySQL db Ingress port for RDS Instance
    Type: "String"

Resources:
# VPC Security Group for EC2 instance
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName:
        Ref: SecurityGroupName
      GroupDescription: 'Enable HTTP access via port 80, SSH access via port 22'
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId:
        Ref: Id
      InstanceType:
        Ref: InstanceType
      DisableApiTermination: true
      SecurityGroupIds:
        - !GetAtt
          - WebServerSecurityGroup
          - GroupId
      SubnetId:
        Ref: SubnetId
      BlockDeviceMappings:
        -
          DeviceName:
            Ref: DeviceName
          Ebs:
            VolumeType:
              Ref: VolumeType
            VolumeSize:
              Ref: VolumeSize
# VPC Security Group for RDS instance
  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Ref DBSecurityGroup
      VpcId: !Ref VpcId
      GroupDescription: Base Security Group
# Ingress rule for RDS instance
  RDSIngressSecurity:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: tcp
      FromPort: !Ref DBIngressPort
      ToPort: !Ref DBIngressPort
      SourceSecurityGroupId: !Ref WebServerSecurityGroup
      GroupId: !Ref RDSSecurityGroup
# Subnet group for RDS instance
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "New subnet for RDS instance"
      SubnetIds:
        - !Ref SubnetId1
        - !Ref SubnetId2
# RDS instance
  RDSInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBName: !Ref DBName
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: !Ref DatabaseType
      EngineVersion: !Ref DatabaseVersion
      StorageType: !Ref DBStorageType
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBInstanceIdentifier: !Ref InstanceIdentifier
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: false
      MultiAZ: false
      VPCSecurityGroups:
      - Ref: RDSSecurityGroup
      Tags:
        -
          Key: "Name"
          Value: "RDS MySQL Database"
# S3 bucket
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["." , [!Ref DomainName, "csye6225.com"]]
      AccessControl: Private

# DynamoDB Table
  DynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: !Ref ColumnName
          AttributeType: !Ref IdDataType
      KeySchema:
        -
          AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCU
        WriteCapacityUnits: !Ref WriteCU
      TableName: !Ref DynamodbTableName

  myDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZoneId
      Name:
        Ref: DomainName
      Type: A
      TTL: 60
      ResourceRecords:
      - !GetAtt EC2Instance.PublicIp

Outputs:
  BucketName:
    Value: !Ref 'S3Bucket'
    Description: Name of the Amazon S3 bucket
