AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template to create an EC2 instance

Parameters:
  InstanceType:
    Description: Instance type to use
    Type: "String"
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small or m1.large
  Id:
    Description: Image id of the AMI
    Type: AWS::EC2::Image::Id
  SubnetId:
    Description: Subnet id of the AMI
    Type: "String"
  VpcId:
    Description: Vpc id of the AMI
    Type: "String"
  SecurityGroupName:
    Description: Security Group name
    Type: "String"
  HostedZoneId:
    Description: Hosted zone id
    Type: "String"
  DomainName:
    Description: domain name to create in the RecordSet
    Type: "String"
  DeviceName:
    Description: device name to create in the RecordSet
    Type: "String"
  VolumeSize:
    Description: volume size to create in the RecordSet
    Type: "String"
  VolumeType:
    Description: volume type to create in the RecordSet
    Type: "String"
 
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId:
        Ref: Id
      InstanceType:
        Ref: InstanceType
      DisableApiTermination: true
      SecurityGroupIds:
        - !GetAtt
          - WebServerSecurityGroup
          - GroupId
      SubnetId:
        Ref: SubnetId
      BlockDeviceMappings:
        -
          DeviceName:
            Ref: DeviceName
          Ebs:
            VolumeType:
              Ref: VolumeType
            VolumeSize:
              Ref: VolumeSize
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName:
        Ref: SecurityGroupName
      GroupDescription: 'Enable HTTP access via port 80, SSH access via port 22'
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
  myDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZoneId
      Name:
        Ref: DomainName
      Type: A
      TTL: 60
      ResourceRecords:
      - !GetAtt EC2Instance.PublicIp
